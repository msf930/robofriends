{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uOAceA,EAZF,SAAH,GAA2B,IAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GACpB,OACI,sBAAKC,UAAU,uDAAsD,UACjE,qBAAKC,IAAI,SAASC,IAAG,+BAA4BH,EAAE,cACnD,gCACA,6BAAKF,IACL,4BAAIC,SAIpB,ECSeK,EAlBE,SAAH,GAAkB,IAAbC,EAAM,EAANA,OAEf,OACI,8BACIA,EAAOC,KAAI,SAACC,EAAMC,GACb,OACG,cAAC,EAAI,CAEDR,GAAKK,EAAOG,GAAGR,GACfF,KAAOO,EAAOG,GAAGV,KACjBC,MAAQM,EAAOG,GAAGT,OAHbS,EAMhB,KAGb,ECJeC,EAbG,SAAH,GAAgB,EAAXC,YAAgC,IAAnBC,EAAY,EAAZA,aAC7B,OACI,qBAAKV,UAAY,MAAK,SAClB,uBACIA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAWH,KAI3B,ECHeI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAS,SAC1EJ,EAAMK,UAGnB,GCaeC,EAnBG,kDACd,WAAYN,GAAQ,IAAD,EAId,OAJc,qBACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GACb,CACL,CAWC,OAXA,8CAED,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,GAC7B,GAAC,oBAED,WACI,OAAIG,KAAKJ,MAAMC,SACJ,6BAAI,6BAERG,KAAKX,MAAMK,QACtB,KAAC,EAjBa,CAASQ,aC+CZC,EAzCN,kDACL,aAAe,IAAD,EAKT,OALS,qBACV,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,QAE1CC,QAAQC,IAAIJ,EAAMC,OAAOC,MAC7B,EAfI,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAChB,CACL,CA+BC,OA/BA,8CAED,WAAqB,IAAD,OAChB2B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACvB,OAAQoC,GAAO,GACjD,GAAC,oBAML,WAAU,IAAD,OACCC,EAAiBf,KAAKJ,MAAMlB,OAAOsC,QAAO,SAAAC,GAC5C,OAAOA,EAAM9C,KAAK+C,cAAcC,SAAS,EAAKvB,MAAMb,YAAYmC,cAChE,IACA,OAAgC,IAA7BlB,KAAKJ,MAAMlB,OAAO0C,OACV,6BAAI,YAGX,sBAAK9C,UAAW,KAAI,UAChB,oBAAIA,UAAU,KAAI,SAAC,kBACnB,cAAC,EAAS,CAACU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAM,UACH,cAAC,EAAY,UACT,cAAC,EAAQ,CAAC1B,OAAUqC,UAM5C,KAAC,EAtCI,CAASb,aCIHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,MCHaO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORb,G","file":"static/js/main.1b9a5990.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n        return (\r\n            <div className=' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img alt='robots' src = {`https://robohash.org/${id}?200x200`}/>\r\n                <div>  \r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return(\r\n        <div>\r\n           {robots.map((user, i) => {\r\n                 return (\r\n                    <Card \r\n                        key={i} \r\n                        id= {robots[i].id} \r\n                        name= {robots[i].name} \r\n                        email= {robots[i].email}\r\n                    />\r\n                 );\r\n             })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n            <input \r\n                className = 'pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search Robots' \r\n                onChange= {searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style= {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        } \r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '' \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n        }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n        \r\n        console.log(event.target.value);\r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n            })\r\n            if(this.state.robots.length === 0){\r\n                return <h1>LOADING</h1>\r\n            } else{\r\n            return(\r\n                <div className= 'tc'>\r\n                    <h1 className='f1'> ROBO FRIENDS</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}